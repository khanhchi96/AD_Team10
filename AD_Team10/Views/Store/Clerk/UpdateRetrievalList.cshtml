@*Author: Wang Wang Wang*@

@model AD_Team10.Models.RetrievalList
@using AD_Team10.Service
@using AD_Team10.Models
@{
    ViewBag.Title = "UpdateRetrievalList";
}

@{
    List<Item> items = (List<Item>)ViewData["items"];
    int lastRows = 0;
}

<div id="navigation">
    @Html.Partial("~/Views/Store/Clerk/_ClerkNavigation.cshtml")
</div>

<div class="container-fluid body">
    <h3 align="center">@RequisitionService.retrievalList</h3>
    <h4 align="center">
        From @Model.StartDate.ToString("dd/MM/yyyy") to @Model.EndDate.ToString("dd/MM/yyyy")
    </h4>
    <hr />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RetrievalListID)

        <p align="right">
            <button class="btn btn-default" type="submit">@RequisitionService.save</button>
        </p>
        <table class="table table-bordered">
            <tr>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model.RetrievalListDetails.First().Item.Description)
                </th>
                <th colspan="2">
                    @RequisitionService.totalQuantity
                </th>
                <th colspan="3">
                    @RequisitionService.breakDownByDep
                </th>
            </tr>
            <tr>
                <th>
                    @RequisitionService.needed
                </th>
                <th>
                    @RequisitionService.retrieved
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RetrievalListDetails.First().Department.DepartmentName)
                </th>
                <th>
                    @RequisitionService.needed
                </th>
                <th>
                    @RequisitionService.retrieved
                </th>
            </tr>
            @for (int i = 0; i < items.Count; i++)
            {
                int rows = Model.RetrievalListDetails.Where(x => x.ItemID == items[i].ItemID).ToList().Count;

                if (i == 0)
                {
                    lastRows = 0;
                }
                else
                {
                    lastRows = lastRows + Model.RetrievalListDetails.Where(x => x.ItemID == items[i - 1].ItemID).ToList().Count;
                }

                <tr>
                    <td rowspan="@rows">
                        @Html.DisplayFor(x => items[i].Description)
                    </td>
                    <td rowspan="@rows">
                        @{ var quantity = Model.RetrievalListDetails.Where(m => m.ItemID == items[i].ItemID).Select(y => y.Quantity).Sum(); }
                        @Html.DisplayFor(x => quantity)
                    </td>
                    <td rowspan="@rows">
                        @{ var quantityOffered = Model.RetrievalListDetails.Where(m => m.ItemID == items[i].ItemID).Select(y => y.QuantityOffered).Sum(); }
                        @Html.DisplayFor(x => quantityOffered)
                    </td>
                    <td>
                        @Model.RetrievalListDetails[lastRows].Department.DepartmentName
                    </td>
                    <td>
                        @Model.RetrievalListDetails[lastRows].Quantity
                    </td>
                    <td>
                        @Html.EditorFor(model => model.RetrievalListDetails[lastRows].QuantityOffered, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RetrievalListDetails[lastRows].QuantityOffered, "", new { @class = "text-danger" })
                    </td>
                </tr>
                for (int j = 1; j < rows; j++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.RetrievalListDetails[lastRows + j].Department.DepartmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.RetrievalListDetails[lastRows + j].Quantity)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.RetrievalListDetails[lastRows + j].QuantityOffered, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RetrievalListDetails[lastRows + j].QuantityOffered, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            }
        </table>
    }
</div>


