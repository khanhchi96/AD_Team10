@using AD_Team10.Models
@model DeptEmployee

@*Author: Stephanie Cheng Sin Yin*@

@{
    var actingHead = ViewBag.actingHead;
    var start = ViewBag.startDate;
    var end = ViewBag.endDate;
}

<div id="navigation">
    @Html.Partial("~/Views/Department/Head/_HeadNavigation.cshtml")
</div>
<div class="container-fluid body">
    <h3>ASSIGN ACTING HEAD</h3>

    <div class="padding50">

        @if (actingHead != "None")
        {<p class="center">Current Acting Head: <b>@actingHead (@start - @end)</b></p>
        <p class="center">Please @Html.ActionLink("cancel current acting head", "CancelActingHead") before assigning a new one.</p>
    }
    else
    {
        using (Html.BeginForm("SuccessfulAssignActingHead", "Head", FormMethod.Post))
        {
            <p class="center"><b>Assign Acting Head:</b> @Html.DropDownListFor(m => m.DeptEmployeeID, (IEnumerable<SelectListItem>)ViewBag.depEmployees, "Select Employee", new { @class = "select" })</p>
            <br />
            <p class="center"><b>Period:</b> From <input type="date" id="start" name="start" class="select small" />  to  <input type="date" id="end" name="end" class="select small" /></p>
            <p></p>
            <p><input type="submit" name="submit" value="Submit and Update" class="submit center" /></p>
        }
    }
    </div>
</div>


<script type="text/javascript">
    let today = new Date().toISOString().substr(0, 10);
    document.querySelector("#start").value = today;

    var testDate = new Date();
    testDate.setDate(testDate.getDate() + 7);
    let nextWeek = testDate.toISOString().substr(0, 10);
    document.querySelector("#end").value = nextWeek;

    start.min = new Date().toISOString().split("T")[0];
</script>
